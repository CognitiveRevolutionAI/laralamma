name: CI-CD

on: [ push ]

# Thanks to https://github.com/shivammathur/setup-php/blob/master/examples/laravel-mysql.yml
jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      DB_DATABASE: test
      DB_USERNAME: root
      DB_PASSWORD: password
      APP_ENV: testing
      BROADCAST_DRIVER: log
      COMPOSER_AUTH: '{"http-basic":{"packages.craftable.pro":{"username":"'$CRAFTABLE_PRO_EMAIL'","password":"'$CRAFTABLE_PRO_LICENCE_KEY'"}}}' composer install --no-interaction --prefer-dist

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ "8.2" ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpmd
          extensions: mbstring, dom, fileinfo, mysql, grpc, :psr
          coverage: xdebug #optional


      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT


      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        uses: php-actions/composer@v6
        env:
          COMPOSER_AUTH: {"http-basic":{"packages.craftable.pro":{"username":"'$CRAFTABLE_PRO_EMAIL'","password":"'$CRAFTABLE_PRO_LICENCE_KEY'"}}}

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate

      - name: Clear Config
        run: php artisan config:clear

      - name: PHP Stan
        run: |
          composer stan

      - name: PHP Code Style (phpcs)
        run: |
          ./vendor/bin/pint --test

      - name: Migrations
        run: |
          sudo cp .env.github .env
          php artisan storage:link

      - name: Test with phpunit
        run: |
          npm install && npm run build
          XDEBUG_MODE=coverage php artisan test --coverage  --min=50
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}

  cd:
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2
          coverage: none
      - name: Install Project Dependencies
        run: |
          curl https://envoyer.io/deploy/${{ secrets.ENVOYER }}
