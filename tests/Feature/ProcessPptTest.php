<?php

namespace Tests\Feature;

use App\Domains\Documents\Transformers\ProcessPpt;
use App\Models\Document;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\File;
use Tests\TestCase;

class ProcessPptTest extends TestCase
{

    use SharedSetupForPptFile;


    protected function tearDown(): void
    {
        if (File::exists($this->document->pathToFile())) {
            File::delete($this->document->pathToFile());
        }
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    /**
     * A basic feature test example.
     */
    public function test_can_process_file(): void
    {
        $document = $this->setupFile();

        $transformer = new ProcessPpt();
        $results = $transformer->handle($document->pathToFile());

        $content = [];
        while ($results->valid()) {
            $this->assertNotEmpty($results->current());
            $dto = $results->current();
            $content[] = $dto->content;
            $results->next();
        }

        $content = implode(' ', $content);

        $this->assertStringContainsString('Example Content', $content);
        $this->assertStringContainsString('Page with Table', $content);
        $this->assertStringContainsString('Test TD 1', $content);
        $this->assertStringContainsString('Page with Image', $content);
        $this->assertStringContainsString('Page with Narrative and List', $content);
        $this->assertStringContainsString('Do nostrud elit ullamco quis anim ', $content);
        $this->assertStringContainsString('Test List 1', $content);
        $this->assertStringContainsString('Page with Charts', $content);
    }
}
